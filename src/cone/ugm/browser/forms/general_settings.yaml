factory: form
name: ugm_settings
props:
    action: context.form_action
    class: ajax
widgets:
- users_heading:
    factory: tag
    props:
        tag: h3
        text: i18n:users_heading:User settings
- users_account_expiration:
    factory: field:label:help:checkbox
    value: expr:context.model.attrs.users_account_expiration == 'True'
    props:
        label: i18n:users_account_expiration:User Accounts expires?
        help: i18n:users_account_expiration_help:Flag whether to consider user expiration
- user_id_autoincrement:
    factory: field:label:help:checkbox
    value: expr:context.model.attrs.user_id_autoincrement == 'True'
    props:
        label: i18n:user_id_autoincrement:Autoincrement user ID
        help: i18n:user_id_autoincrement_help:Flag whether to autoincrement user
            IDs at user creation time. This feature only works for systems using
            numeric user IDs
- user_id_autoincrement_prefix:
    factory: field:label:help:text
    value: expr:context.model.attrs.user_id_autoincrement_prefix
    props:
        label: i18n:user_id_autoincrement_prefix:Autoincrement user ID prefix
        help: i18n:user_id_autoincrement_prefix_help:Prefix for autogenerated user ID's
- user_id_autoincrement_start:
    factory: field:label:help:error:number
    value: expr:int(
            context.model.attrs.user_id_autoincrement_start
            if context.model.attrs.user_id_autoincrement_start else 0
        )
    props:
        label: i18n:user_id_autoincrement_start:Autoincrement initial user number
        help: i18n:user_id_autoincrement_start_help:User number to start from
        datatype: python:int
- users_portrait:
    factory: field:label:help:checkbox
    value: expr:context.model.attrs.users_portrait == 'True'
    props:
        label: i18n:users_portrait:Portrait Support
        help: i18n:users_portrait_help:Flag whether users can have a portrait
- users_portrait_attr:
    factory: field:label:help:error:*portrait:text
    value: expr:context.model.attrs.users_portrait_attr
    props:
        label: i18n:users_portrait_attr:Attribute containing portrait image
        help: i18n:users_portrait_attr_help:Attribute name containing portrait image
    custom:
        portrait:
            extractors:
                - context.required_if_users_portrait
- users_portrait_accept:
    factory: field:label:help:error:*portrait:text
    value: expr:context.model.attrs.users_portrait_accept
    props:
        label: i18n:users_portrait_accept:Portrait mimetype
        help: i18n:users_portrait_accept_help:Accepted Image mimetype for portrait property
    custom:
        portrait:
            extractors:
                - context.required_if_users_portrait
- users_portrait_width:
    factory: field:label:help:error:*portrait:text
    value: expr:int(context.model.attrs.users_portrait_width)
    props:
        label: i18n:users_portrait_width:Portrait width
        help: i18n:users_portrait_width_help:Width in pixel portrait gets scaled to
        datatype: python:int
    custom:
        portrait:
            extractors:
                - yafowil.common.number_extractor
                - context.required_if_users_portrait
- users_portrait_height:
    factory: field:label:help:error:*portrait:text
    value: expr:int(context.model.attrs.users_portrait_height)
    props:
        label: i18n:users_portrait_height:Portrait height
        help: i18n:users_portrait_height_help:Height in pixel portrait gets scaled to
        datatype: python:int
    custom:
        portrait:
            extractors:
                - yafowil.common.number_extractor
                - context.required_if_users_portrait
- users_local_management_enabled:
    factory: field:label:help:checkbox
    value: expr:context.model.attrs.users_local_management_enabled == 'True'
    props:
        label: i18n:users_local_management_enabled:Local User Management
        help: i18n:users_local_management_enabled_help:Enable local User Management
- users_login_name_attr:
    factory: field:label:help:text
    value: expr:context.model.attrs.users_login_name_attr
    props:
        label: i18n:users_login_name_attr:Login name attribute
        help: i18n:users_login_name_attr_help:Attribute used for optional login name
- users_exposed_attributes:
    factory: field:label:help:array
    value: expr:context.model.attrs.users_exposed_attributes
    props:
        label.label: i18n:users_exposed_attributes_label:Exposed user attributes
        array.label: i18n:users_exposed_attributes_array:Click '+' to add attributes
        help: i18n:users_exposed_attributes_help:Attributes which can be set via remote API
        sort: False
    widgets:
    - exposed:
        factory: error:text
        props:
            label: i18n:users_exposed_attributes_attribute:Attribute
            required: i18n:users_exposed_attributes_attribute_required:No attribute given
- users_form_attrmap:
    factory: field:label:help:error:dict
    value: expr:context.model.attrs.users_form_attrmap
    props:
        label: i18n:users_form_attrmap:User form attributes
        help: i18n:users_form_attrmap_help:Attributes exposed in user form
        key_label: i18n:principal_attr_name:Attribute name
        value_label: i18n:form_label:Form label
- users_listing_columns:
    factory: field:label:help:error:dict
    value: expr:context.model.attrs.users_listing_columns
    props:
        label: i18n:users_listing_columns:Column configuration for user listings
        help: i18n:users_listing_columns_help:Attributes shown in user listing
        required: i18n:users_listing_columns_required:User listing columns must not be empty
        key_label: i18n:principal_attr_name:Attribute name
        value_label: i18n:display_name:Display name
- users_listing_default_column:
    factory: field:label:help:error:text
    value: expr:context.model.attrs.users_listing_default_column
    props:
        label: i18n:users_listing_default_column:Users listing default column
        help: i18n:users_listing_default_column_help:Default sort column in user listing
        required: i18n:users_listing_default_column_required:Default sort column in
            user listing is required
- groups_heading:
    factory: tag
    props:
        tag: h3
        text: i18n:groups_heading:Group Settings
- groups_form_attrmap:
    factory: field:label:help:error:dict
    value: expr:context.model.attrs.groups_form_attrmap
    props:
        label: i18n:groups_form_attrmap:Group form attributes
        help: i18n:groups_form_attrmap_help:Attributes exposed in group form
        key_label: i18n:principal_attr_name:Attribute name
        value_label: i18n:form_label:Form label
- groups_listing_columns:
    factory: field:label:help:error:dict
    value: expr:context.model.attrs.groups_listing_columns
    props:
        label: i18n:groups_listing_columns:Column configuration for groups listings
        help: i18n:groups_listing_columns_help:Attributes shown in group listing
        required: i18n:groups_listing_columns_required:Group listing columns must not be empty
        key_label: i18n:principal_attr_name:Attribute name
        value_label: i18n:display_name:Display name
- groups_listing_default_column:
    factory: field:label:help:error:text
    value: expr:context.model.attrs.groups_listing_default_column
    props:
        label: i18n:groups_listing_default_column:Groups listing default column
        help: i18n:groups_listing_default_column_help:Default sort column in group listing
        required: i18n:groups_listing_default_column_required:Default sort column in
            groups listing is required
- roles_heading:
    factory: tag
    props:
        tag: h3
        text: i18n:roles_heading:Roles settings
- roles_principal_roles_enabled:
    factory: field:label:help:checkbox
    value: expr:context.model.attrs.roles_principal_roles_enabled == 'True'
    props:
        label: i18n:roles_principal_roles_enabled:Principal roles
        help: i18n:roles_principal_roles_enabled_help:Enable roles on principals
- save:
    factory: submit
    props:
        action: save
        expression: True
        handler: context.save
        next: context.next
        label: i18n:save:Save
